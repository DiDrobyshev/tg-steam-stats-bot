# bot.py
import logging
from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes
from dotenv import load_dotenv
from database import init_db, save_chat_id
from scheduler import SchedulerManager
from player_config import load_players
import os

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start –∏ /start@–∏–º—è–±–æ—Ç–∞"""
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ
    chat = update.effective_chat
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º chat_id –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    save_chat_id(chat.id)
    logger.info(f"Chat ID saved: {chat.id} (title: {chat.title})")
    
    players = load_players()
    player_list = "\n".join([f"- {p['display_name']} ({p['steam_id']})" for p in players])
    
    response = (
        "üöÄ –ë–æ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!\n\n"
        f"–ß–∞—Ç ID: `{chat.id}`\n"
        f"–¢–∏–ø —á–∞—Ç–∞: {'–≥—Ä—É–ø–ø–∞' if chat.type in ['group', 'supergroup'] else '–ª–∏—á–Ω—ã–π'}\n\n"
        f"–û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ –∏–≥—Ä–æ–∫–∏:\n{player_list}\n\n"
        "–°—Ç–∞—Ç—É—Å –±—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª—è—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∫–∞–∂–¥—ã–µ 10 –º–∏–Ω—É—Ç."
    )
    
    await context.bot.send_message(
        chat_id=chat.id,
        text=response,
        parse_mode="Markdown"
    )

async def reload_players(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤"""
    from player_config import load_players
    load_players(force_reload=True)
    
    players = load_players()
    player_list = "\n".join([f"- {p['display_name']} ({p['steam_id']})" for p in players])
    
    await update.message.reply_text(
        "‚úÖ –°–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤ —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω!\n\n"
        f"–¢–µ–∫—É—â–∏–µ –∏–≥—Ä–æ–∫–∏ ({len(players)}):\n{player_list}",
        parse_mode="Markdown"
    )

def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    init_db()
    logger.info("Database initialized")
    
    # –°–æ–∑–¥–∞–µ–º Application
    application = Application.builder().token(os.getenv('TELEGRAM_BOT_TOKEN')).build()
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("reload", reload_players))  # –î–æ–±–∞–≤–ª–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /reload
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫
    scheduler = SchedulerManager(application)
    scheduler.start()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    logger.info("Starting bot...")
    application.run_polling()

if __name__ == '__main__':
    main()